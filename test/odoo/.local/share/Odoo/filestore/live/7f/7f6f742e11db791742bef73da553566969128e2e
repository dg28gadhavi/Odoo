)]}'
{"version": 3, "sources": ["/web/static/src/legacy/js/promise_extension.js", "/web/static/src/module_loader.js", "/web/static/src/session.js", "/web/static/src/legacy/js/core/cookie_utils.js", "/web/static/src/legacy/js/public/lazyloader.js", "/web_editor/static/src/js/frontend/loader_loading.js"], "mappings": "AAAA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvlOA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;ACJA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AClHA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA", "sourcesContent": ["/**\n * This file adds a 'guardedCatch' function to the Promise API. This function\n * has to be used when we don't want to swallow real errors (crashes), like\n * 'catch' does (i.e. basically all the time in Odoo). We only execute the\n * 'onRejected' handler if the rejection's reason is not an Error, and we always\n * return a rejected Promise to let the rejection bubble up (and trigger the\n * 'unhandledrejection' event).\n */\n\n(function () {\n    var _catch = Promise.prototype.catch;\n    Promise.prototype.guardedCatch = function (onRejected) {\n        return _catch.call(this, function (reason) {\n            const error = (reason instanceof Error && \"cause\" in reason) ? reason.cause : reason;\n            if (!error || !(error instanceof Error)) {\n                if (onRejected) {\n                    onRejected.call(this, reason);\n                }\n            }\n            return Promise.reject(reason);\n        });\n    };\n})();\n", "/**\n *------------------------------------------------------------------------------\n * Odoo Web Boostrap Code\n *------------------------------------------------------------------------------\n */\n(function () {\n    \"use strict\";\n\n    class ModuleLoader {\n        /** @type {Map<string,{fn: Function, deps: string[]}>} mapping name => deps/fn */\n        factories = new Map();\n        /** @type {Set<string>} names of modules waiting to be started */\n        jobs = new Set();\n        /** @type {Set<string>} names of failed modules */\n        failed = new Set();\n\n        /** @type {Map<string,any>} mapping name => value */\n        modules = new Map();\n\n        bus = new EventTarget();\n\n        checkErrorProm = null;\n\n        /**\n         * @param {string} name\n         * @param {string[]} deps\n         * @param {Function} factory\n         */\n        define(name, deps, factory) {\n            if (typeof name !== \"string\") {\n                throw new Error(`Invalid name definition: ${name} (should be a string)\"`);\n            }\n            if (!(deps instanceof Array)) {\n                throw new Error(`Dependencies should be defined by an array: ${deps}`);\n            }\n            if (typeof factory !== \"function\") {\n                throw new Error(`Factory should be defined by a function ${factory}`);\n            }\n            if (!this.factories.has(name)) {\n                this.factories.set(name, {\n                    deps,\n                    fn: factory,\n                    ignoreMissingDeps: globalThis.__odooIgnoreMissingDependencies,\n                });\n                this.addJob(name);\n                this.checkErrorProm ||= Promise.resolve().then(() => {\n                    this.checkAndReportErrors();\n                    this.checkErrorProm = null;\n                });\n            }\n        }\n\n        addJob(name) {\n            this.jobs.add(name);\n            this.startModules();\n        }\n\n        findJob() {\n            for (const job of this.jobs) {\n                if (this.factories.get(job).deps.every((dep) => this.modules.has(dep))) {\n                    return job;\n                }\n            }\n            return null;\n        }\n\n        startModules() {\n            let job;\n            while ((job = this.findJob())) {\n                this.startModule(job);\n            }\n        }\n\n        startModule(name) {\n            const require = (name) => this.modules.get(name);\n            this.jobs.delete(name);\n            const factory = this.factories.get(name);\n            let value = null;\n            try {\n                value = factory.fn(require);\n            } catch (error) {\n                this.failed.add(name);\n                throw new Error(`Error while loading \"${name}\":\\n${error}`);\n            }\n            this.modules.set(name, value);\n            this.bus.dispatchEvent(\n                new CustomEvent(\"module-started\", { detail: { moduleName: name, module: value } })\n            );\n        }\n\n        findErrors() {\n            // cycle detection\n            const dependencyGraph = new Map();\n            for (const job of this.jobs) {\n                dependencyGraph.set(job, this.factories.get(job).deps);\n            }\n            function visitJobs(jobs, visited = new Set()) {\n                for (const job of jobs) {\n                    const result = visitJob(job, visited);\n                    if (result) {\n                        return result;\n                    }\n                }\n                return null;\n            }\n\n            function visitJob(job, visited) {\n                if (visited.has(job)) {\n                    const jobs = Array.from(visited).concat([job]);\n                    const index = jobs.indexOf(job);\n                    return jobs\n                        .slice(index)\n                        .map((j) => `\"${j}\"`)\n                        .join(\" => \");\n                }\n                const deps = dependencyGraph.get(job);\n                return deps ? visitJobs(deps, new Set(visited).add(job)) : null;\n            }\n\n            // missing dependencies\n            const missing = new Set();\n            for (const job of this.jobs) {\n                const factory = this.factories.get(job);\n                if (factory.ignoreMissingDeps) {\n                    continue;\n                }\n                for (const dep of factory.deps) {\n                    if (!this.factories.has(dep)) {\n                        missing.add(dep);\n                    }\n                }\n            }\n\n            return {\n                failed: [...this.failed],\n                cycle: visitJobs(this.jobs),\n                missing: [...missing],\n                unloaded: [...this.jobs].filter((j) => !this.factories.get(j).ignoreMissingDeps),\n            };\n        }\n\n        async checkAndReportErrors() {\n            const { failed, cycle, missing, unloaded } = this.findErrors();\n            if (!failed.length && !unloaded.length) {\n                return;\n            }\n\n            function domReady(cb) {\n                if (document.readyState === \"complete\") {\n                    cb();\n                } else {\n                    document.addEventListener(\"DOMContentLoaded\", cb);\n                }\n            }\n\n            function list(heading, names) {\n                const frag = document.createDocumentFragment();\n                if (!names || !names.length) {\n                    return frag;\n                }\n                frag.textContent = heading;\n                const ul = document.createElement(\"ul\");\n                for (const el of names) {\n                    const li = document.createElement(\"li\");\n                    li.textContent = el;\n                    ul.append(li);\n                }\n                frag.appendChild(ul);\n                return frag;\n            }\n\n            domReady(() => {\n                // Empty body\n                while (document.body.childNodes.length) {\n                    document.body.childNodes[0].remove();\n                }\n                const container = document.createElement(\"div\");\n                container.className =\n                    \"position-fixed w-100 h-100 d-flex align-items-center flex-column bg-white overflow-auto modal\";\n                container.style.zIndex = \"10000\";\n                const alert = document.createElement(\"div\");\n                alert.className = \"alert alert-danger o_error_detail fw-bold m-auto\";\n                container.appendChild(alert);\n                alert.appendChild(\n                    list(\n                        \"The following modules failed to load because of an error, you may find more information in the devtools console:\",\n                        failed\n                    )\n                );\n                alert.appendChild(\n                    list(\n                        \"The following modules could not be loaded because they form a dependency cycle:\",\n                        cycle && [cycle]\n                    )\n                );\n                alert.appendChild(\n                    list(\n                        \"The following modules are needed by other modules but have not been defined, they may not be present in the correct asset bundle:\",\n                        missing\n                    )\n                );\n                alert.appendChild(\n                    list(\n                        \"The following modules could not be loaded because they have unmet dependencies, this is a secondary error which is likely caused by one of the above problems:\",\n                        unloaded\n                    )\n                );\n                document.body.appendChild(container);\n            });\n        }\n    }\n\n    if (!globalThis.odoo) {\n        globalThis.odoo = {};\n    }\n    const odoo = globalThis.odoo;\n    if (odoo.debug && !new URLSearchParams(location.search).has(\"debug\")) {\n        // remove debug mode if not explicitely set in url\n        odoo.debug = \"\";\n    }\n\n    const loader = new ModuleLoader();\n    odoo.define = loader.define.bind(loader);\n\n    odoo.loader = loader;\n})();\n", "/** @odoo-module **/\n\nexport const session = odoo.__session_info__ || {};\ndelete odoo.__session_info__;\n", "/** @odoo-module **/\n\n/**\n * Reads the cookie described by the given name.\n *\n * @param {string} cookieName\n * @returns {string}\n */\nexport function getCookie(cookieName) {\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    for (var i = 0, l = cookies.length; i < l; i++) {\n        var parts = cookies[i].split('=');\n        var name = parts.shift();\n        var cookie = parts.join('=');\n\n        if (cookieName && cookieName === name) {\n            if (cookie.startsWith('\"')) {\n                if (cookie.includes('\\\\')){\n                    // see werkzeug _cookie_quote\n                    throw new Error(\n                        `Cookie value contains unknown characters ${cookie}`\n                    )\n                }\n                cookie = cookie.slice(1, -1);\n            }\n            return cookie;\n        }\n    }\n    return \"\";\n}\n/**\n * Check if cookie can be written.\n *\n * @param {String} type the type of the cookie\n * @returns {boolean}\n */\nexport function isAllowedCookie(type) {\n    return true;\n}\n/**\n * Creates a cookie.\n *\n * @param {string} name the name of the cookie\n * @param {string} value the value stored in the cookie\n * @param {integer} ttl time to live of the cookie in millis. -1 to erase the cookie.\n * @param {string} type the type of the cookies ('required' as default value)\n */\nexport function setCookie(name, value, ttl = 31536000, type = 'required') {\n    ttl = isAllowedCookie(type) ? ttl || 24 * 60 * 60 * 365 : -1;\n    document.cookie = [\n        `${name}=${value}`,\n        'path=/',\n        `max-age=${ttl}`,\n        `expires=${new Date(new Date().getTime() + ttl * 1000).toGMTString()}`,\n    ].join(';');\n}\n/**\n * Deletes a cookie.\n *\n * @param {string} name the name of the cookie\n */\nexport function deleteCookie(name) {\n    document.cookie = [\n        `${name}=`,\n        'path=/',\n        `max-age=-1`,\n        `expires=${new Date(new Date().getTime() - 1000).toGMTString()}`,\n    ].join(';');\n}\n\nexport default {\n    deleteCookie,\n    setCookie,\n    getCookie,\n    isAllowedCookie\n};\n", "/** @odoo-module **/\n\nvar blockEvents = ['submit', 'click'];\nvar blockFunction = function (ev) {\n    ev.preventDefault();\n    ev.stopImmediatePropagation();\n};\n\nvar waitingLazy = false;\n\n/**\n * Blocks the DOM sections which explicitly require the lazy loaded JS to be\n * working (those sections should be marked with the 'o_wait_lazy_js' class).\n *\n * @see stopWaitingLazy\n */\nfunction waitLazy() {\n    if (waitingLazy) {\n        return;\n    }\n    waitingLazy = true;\n\n    var lazyEls = document.querySelectorAll('.o_wait_lazy_js');\n    for (var i = 0; i < lazyEls.length; i++) {\n        var element = lazyEls[i];\n        blockEvents.forEach(function (evType) {\n            element.addEventListener(evType, blockFunction);\n        });\n    }\n\n    document.body.classList.add('o_lazy_js_waiting');\n}\n/**\n * Unblocks the DOM sections blocked by @see waitLazy and removes the related\n * 'o_wait_lazy_js' class from the whole DOM.\n */\nfunction stopWaitingLazy() {\n    if (!waitingLazy) {\n        return;\n    }\n    waitingLazy = false;\n\n    var lazyEls = document.querySelectorAll('.o_wait_lazy_js');\n    for (var i = 0; i < lazyEls.length; i++) {\n        var element = lazyEls[i];\n        blockEvents.forEach(function (evType) {\n            element.removeEventListener(evType, blockFunction);\n        });\n        element.classList.remove('o_wait_lazy_js');\n    }\n\n    document.body.classList.remove('o_lazy_js_waiting');\n}\n\n// Start waiting for lazy loading as soon as the DOM is available\nif (document.readyState !== 'loading') {\n    waitLazy();\n} else {\n    document.addEventListener('DOMContentLoaded', function () {\n        waitLazy();\n    });\n}\n\n// As soon as everything is fully loaded, start loading all the remaining JS\n// and unblock the related DOM section when all of it have been loaded and\n// executed\nvar doResolve = null;\nvar _allScriptsLoaded = new Promise(function (resolve) {\n    if (doResolve) {\n        resolve();\n    } else {\n        doResolve = resolve;\n    }\n}).then(function () {\n    stopWaitingLazy();\n});\nif (document.readyState === 'complete') {\n    setTimeout(_loadScripts, 0);\n} else {\n    window.addEventListener('load', function () {\n        setTimeout(_loadScripts, 0);\n    });\n}\n\n/**\n * @param {DOMElement[]} scripts\n * @param {integer} index\n */\nfunction _loadScripts(scripts, index) {\n    if (scripts === undefined) {\n        scripts = document.querySelectorAll('script[data-src]');\n    }\n    if (index === undefined) {\n        index = 0;\n    }\n    if (index >= scripts.length) {\n        if (typeof doResolve === 'function') {\n            doResolve();\n        } else {\n            doResolve = true;\n        }\n        return;\n    }\n    var script = scripts[index];\n    script.addEventListener('load', _loadScripts.bind(this, scripts, index + 1));\n    script.setAttribute('defer', 'defer');\n    script.src = script.dataset.src;\n    script.removeAttribute('data-src');\n}\n\nexport default {\n    loadScripts: _loadScripts,\n    allScriptsLoaded: _allScriptsLoaded,\n};\n", "(function () {\n'use strict';\n\n/**\n * This file makes sure textarea elements with a specific editor class are\n * tweaked as soon as the DOM is ready so that they appear to be loading.\n *\n * They must then be loaded using standard Odoo modules system. In particular,\n * @see @web_editor/js/frontend/loadWysiwygFromTextarea\n */\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    // Standard loop for better browser support\n    var textareaEls = document.querySelectorAll('textarea.o_wysiwyg_loader');\n    for (var i = 0; i < textareaEls.length; i++) {\n        var textarea = textareaEls[i];\n        var wrapper = document.createElement('div');\n        wrapper.classList.add('position-relative', 'o_wysiwyg_textarea_wrapper');\n\n        var loadingElement = document.createElement('div');\n        loadingElement.classList.add('o_wysiwyg_loading');\n        var loadingIcon = document.createElement('i');\n        loadingIcon.classList.add('text-600', 'text-center',\n            'fa', 'fa-circle-o-notch', 'fa-spin', 'fa-2x');\n        loadingElement.appendChild(loadingIcon);\n        wrapper.appendChild(loadingElement);\n\n        textarea.parentNode.insertBefore(wrapper, textarea);\n        wrapper.insertBefore(textarea, loadingElement);\n    }\n});\n\n})();\n"], "file": "/web/assets/151-9472b85/web.assets_frontend_minimal.js", "sourceRoot": "../../../"}